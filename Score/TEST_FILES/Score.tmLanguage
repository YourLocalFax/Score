<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
   <key>comment</key>
   <string>score Programming Language</string>

   <key>fileTypes</key>
   <array>
      <string>score</string>
   </array>

   <key>name</key>
   <string>Score</string>

   <key>foldingStartMarker</key>
   <string>\{|\[|\(</string>
   <key>foldingStopMarker</key>
   <string>\}|\]|\)</string>

   <key>patterns</key>
   <array>

      <!-- Comments -->

      <dict> <!-- Block Comment -->
         <key>begin</key>
         <string>/\*</string>
         <key>beginCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.comment.begin.score</string>
            </dict>
         </dict>
         <key>end</key>
         <string>\*/</string>
         <key>endCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.comment.end.score</string>
            </dict>
         </dict>
         <key>name</key>
         <string>comment.block.score</string>
      </dict>

      <dict> <!-- Processor -->
         <key>begin</key>
         <string>/#\[</string>
         <key>beginCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.comment.begin.score</string>
            </dict>
         </dict>
         <key>end</key>
         <string>\]</string>
         <key>endCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.comment.end.score</string>
            </dict>
         </dict>
         <key>name</key>
         <string>comment.block.score</string>
      </dict>

      <dict> <!-- Line Comment -->
         <key>match</key>
         <string>/#.*$\n?</string>
         <key>captures</key>
         <dict>
            <key>1</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.comment.score</string>
            </dict>
         </dict>
         <key>name</key>
         <string>comment.line.score</string>
      </dict>

      <!-- Constants -->

      <dict> <!-- Numbers -->
         <key>patterns</key>
         <array>
            <dict>
               <key>match</key>
               <string>\b(0b[01]+(_*[01]+)*)([uUiI](8|16|32|64)?|[fF](16|32|64)?)?\b</string>
               <key>name</key>
               <string>constant.numeric.score</string>
            </dict>
            <dict>
               <key>match</key>
               <string>\b(0c[0-7]+(_*[01]+)*)([uUiI](8|16|32|64)?|[fF](16|32|64)?)?\b</string>
               <key>name</key>
               <string>constant.numeric.score</string>
            </dict>
            <dict>
               <key>match</key>
               <string>\b(0x\h+(_*\h+)*)([uUiI](8|16|32|64)?|[fF](16|32|64)?)?\b</string>
               <key>name</key>
               <string>constant.numeric.score</string>
            </dict>
            <dict>
               <key>match</key> <!-- TODO this needs to be a generic identifier suffix -->
               <string>\b(\d+(_*\d+)*([uUiI](8|16|32|64)?|[fF](16|32|64)?)?)\b</string>
               <key>name</key>
               <string>constant.numeric.score</string>
            </dict>
            <dict>
               <key>match</key>
               <string>\b(\d+(_*\d+)*(\.\d+)?([eE]-?\d+(_*\d+)*)?([fF](16|32|64)?)?)\b</string>
               <key>name</key>
               <string>constant.numeric.score</string>
            </dict>
         </array>
      </dict>

      <dict> <!-- String -->
         <key>begin</key>
         <string>c?"</string>
         <key>beginCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.string.begin.score</string>
            </dict>
         </dict>
         <key>end</key>
         <string>"|\n</string>
         <key>endCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.string.end.score</string>
            </dict>
         </dict>
         <key>name</key>
         <string>string.quoted.double.score</string>
         <key>patterns</key>
         <array>
            <dict>
               <key>match</key>
               <string>\\.</string>
               <key>name</key>
               <string>constant.character.escape.score</string>
            </dict>
         </array>
      </dict>

      <dict> <!-- Verbatim String -->
         <key>begin</key>
         <string>(v|vc|cv)?"</string>
         <key>beginCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.string.begin.score</string>
            </dict>
         </dict>
         <key>end</key>
         <string>"</string>
         <key>endCaptures</key>
         <dict>
            <key>0</key>
            <dict>
               <key>name</key>
               <string>punctuation.definition.string.end.score</string>
            </dict>
         </dict>
         <key>name</key>
         <string>string.quoted.double.score</string>
         <key>patterns</key>
         <array>
            <dict>
               <key>match</key>
               <string>\\.</string>
               <key>name</key>
               <string>constant.character.escape.score</string>
            </dict>
         </array>
      </dict>

      <dict> <!-- Character -->
         <key>match</key>
         <string>'(\\u\x\x\x\x|\\(n|t|r|0|'|")|.)'</string>
         <key>name</key>
         <string>string.quoted.single.score</string>
      </dict>

      <dict> <!-- Keyword Literal -->
         <key>match</key>
         <string>\b(true|false)\b</string>
         <key>name</key>
         <string>constant.language.score</string>
      </dict>

      <dict> <!-- Symbol -->
         <key>match</key>
         <string>'((_[a-zA-Z\d])|[a-zA-Z])[a-zA-Z_\d]*</string>
         <key>name</key>
         <string>constant.language.score</string>
      </dict>

      <dict> <!-- Wildcard -->
         <key>match</key>
         <string>\b_\b</string>
         <key>name</key>
         <string>constant.language.score</string>
      </dict>

      <dict> <!-- Anonymous Parameter -->
         <key>match</key>
         <string>\$\d</string>
         <key>name</key>
         <string>constant.language.score</string>
      </dict>

      <dict> <!-- Vargs -->
         <key>match</key>
         <string>\.\.</string>
         <key>name</key>
         <string>constant.numeric.score</string>
      </dict>

      <!-- Separators -->

      <dict> <!-- Brackets -->
         <key>match</key>
         <string>\b(\(|\)|\[|\]|{|\})\b</string>
      </dict>

      <dict> <!-- Punctuation -->
         <key>match</key>
         <string>\b(\.|\,|\:)\b</string>
      </dict>

      <!-- Operators -->

      <dict> <!-- Infix Function Operators -->
         <key>match</key>
         <string>\`(_|[a-zA-Z])[a-zA-Z0-9_]*</string>
         <key>name</key>
         <string>keyword.operator.score</string>
      </dict>

      <dict> <!-- Operator Characters -->
         <key>match</key>
         <string>\`|\+|\-|\*|\$|\\|\/|\%|\=|\~|\&|\||\^|\!|\?|\#|\@|&lt;|&gt;|:|;|\.|,</string>
         <key>name</key>
         <string>keyword.operator.score</string>
      </dict>

      <!-- Keywords -->

      <dict> <!-- Variable + Access -->
         <key>match</key>
         <string>\b(let|mut|lazy|take|pub|priv|stat|extern|intern|virtual|override|implicit)\b</string>
         <key>name</key>
         <string>keyword.score</string>
      </dict>

      <dict> <!-- Kits -->
         <key>match</key>
         <string>\b(use|from|kit)\b</string>
         <key>name</key>
         <string>keyword.score</string>
      </dict>

      <dict> <!-- Function -->
         <key>match</key>
         <string>\b(self|tailrec|fn|gen|event)\b</string>
         <key>name</key>
         <string>keyword.score</string>
      </dict>

      <dict> <!-- Type -->
         <key>match</key>
         <string>\b(this|base|struct|class|data|enum|trait|impl|type|sealed|partial)\b</string>
         <key>name</key>
         <string>keyword.score</string>
      </dict>

      <dict> <!-- Control Flow -->
         <key>match</key>
         <string>\b(if|el|when|for|each|while|loop|match|ret|break|cont|resume|yield)\b</string>
         <key>name</key>
         <string>keyword.score</string>
      </dict>

      <dict> <!-- Operator -->
         <key>match</key>
         <string>\b(typeof|is|as)\b</string>
         <key>name</key>
         <string>keyword.score</string>
      </dict>

      <!-- Common Types -->

      <dict> <!-- "Primitive"s -->
         <key>match</key>
         <string>\b((i|u)(8|16|32|64)|f(16|32|64)|char|bool|str|object)\b</string>
         <key>name</key>
         <string>storage.type.primitive.score</string>
      </dict>


      <dict> <!-- Standard Typedefs -->
         <key>match</key>
         <string>\b((u?(byte|short|int|long))|half|float|double)\b</string>
         <key>name</key>
         <string>storage.type.primitive.score</string>
      </dict>

      <!-- Predefined Functions -->

      <dict> <!-- Standard -->
         <key>match</key>
         <string>\b(print(ln)?|main)\b</string>
         <key>name</key>
         <string>entity.name.function.score</string>
      </dict>

      <dict> <!-- Iteration -->
         <key>match</key>
         <string>\b(forEach)\b</string>
         <key>name</key>
         <string>entity.name.function.score</string>
      </dict>

   </array>

   <key>scopeName</key>
   <string>source.score</string>
   <key>uuid</key>
   <string>93E017CC-6F27-11D9-90EB-000D93589AF7</string>
</dict>
</plist>
